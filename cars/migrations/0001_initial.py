# Generated by Django 5.2.5 on 2025-08-11 18:10

import cars.models
import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=60, unique=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CarFeature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=180, unique=True)),
                ('icon', models.CharField(blank=True, max_length=180)),
                ('slug', models.SlugField(editable=False, max_length=180, unique=True)),
            ],
            options={
                'verbose_name': 'Caractéristique',
                'verbose_name_plural': 'Caractéristiques',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=80, unique=True)),
                ('slug', models.SlugField(editable=False, max_length=80, unique=True)),
            ],
            options={
                'verbose_name': 'Ville',
                'verbose_name_plural': 'Villes',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CarModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='models', to='cars.brand')),
            ],
            options={
                'ordering': ['brand__name', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('title', models.CharField(help_text='Titre de l’annonce (ex: Toyota Yaris 2020 propre)', max_length=140)),
                ('slug', models.SlugField(editable=False, max_length=160, unique=True)),
                ('year', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(2010), django.core.validators.MaxValueValidator(cars.models.current_year_plus_one)])),
                ('body_type', models.CharField(choices=[('city', 'Citadine'), ('sedan', 'Berline'), ('suv', 'SUV'), ('4x4', '4x4'), ('pickup', 'Pickup'), ('van', 'Monospace / Van'), ('minibus', 'Minibus'), ('bus', 'Bus'), ('car', 'Car'), ('coupe', 'Coupé'), ('conv', 'Cabriolet'), ('other', 'Autre')], default='city', max_length=12)),
                ('transmission', models.CharField(choices=[('manual', 'Manuelle'), ('auto', 'Automatique')], default='manual', max_length=10)),
                ('fuel_type', models.CharField(choices=[('gasoline', 'Essence'), ('diesel', 'Diesel'), ('hybrid', 'Hybride'), ('electric', 'Électrique'), ('lpg', 'GPL'), ('other', 'Autre')], default='gasoline', max_length=10)),
                ('seats', models.PositiveSmallIntegerField(default=5, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)])),
                ('doors', models.PositiveSmallIntegerField(default=4, validators=[django.core.validators.MinValueValidator(2), django.core.validators.MaxValueValidator(4)])),
                ('mileage_km', models.PositiveIntegerField(choices=[(10000, '10 000 km'), (15000, '15 000 km'), (20000, '20 000 km'), (25000, '25 000 km'), (30000, '30 000 km'), (35000, '35 000 km'), (40000, '40 000 km'), (45000, '45 000 km'), (50000, '50 000 km'), (55000, '55 000 km'), (60000, '60 000 km'), (65000, '65 000 km'), (70000, '70 000 km'), (75000, '75 000 km'), (80000, '80 000 km'), (85000, '85 000 km'), (90000, '90 000 km'), (95000, '95 000 km'), (100000, '100 000 km'), (105000, '105 000 km'), (110000, '110 000 km'), (115000, '115 000 km'), (120000, '120 000 km'), (125000, '125 000 km'), (130000, '130 000 km'), (135000, '135 000 km'), (140000, '140 000 km'), (145000, '145 000 km'), (150000, '150 000 km'), (155000, '155 000 km'), (160000, '160 000 km'), (165000, '165 000 km'), (170000, '170 000 km'), (175000, '175 000 km'), (180000, '180 000 km'), (185000, '185 000 km'), (190000, '190 000 km'), (195000, '195 000 km'), (200000, '200 000 km'), (205000, '205 000 km'), (210000, '210 000 km'), (215000, '215 000 km'), (220000, '220 000 km'), (225000, '225 000 km'), (230000, '230 000 km'), (235000, '235 000 km'), (240000, '240 000 km'), (245000, '245 000 km'), (250000, '250 000 km'), (255000, '255 000 km'), (260000, '260 000 km'), (265000, '265 000 km'), (270000, '270 000 km'), (275000, '275 000 km'), (280000, '280 000 km'), (285000, '285 000 km'), (290000, '290 000 km'), (295000, '295 000 km'), (300000, '300 000 km')], default=10000)),
                ('color', models.CharField(choices=[('white', 'Blanc'), ('black', 'Noir'), ('silver', 'Argent'), ('grey', 'Gris'), ('blue', 'Bleu'), ('red', 'Rouge'), ('green', 'Vert'), ('yellow', 'Jaune'), ('orange', 'Orange'), ('brown', 'Marron'), ('beige', 'Beige'), ('gold', 'Doré'), ('purple', 'Violet'), ('other', 'Autre')], default='white', max_length=10)),
                ('description', models.TextField(blank=True)),
                ('daily_price', models.PositiveIntegerField(choices=[(15000, '15 000 F'), (20000, '20 000 F'), (25000, '25 000 F'), (30000, '30 000 F'), (35000, '35 000 F'), (40000, '40 000 F'), (45000, '45 000 F'), (50000, '50 000 F'), (55000, '55 000 F'), (60000, '60 000 F'), (65000, '65 000 F'), (70000, '70 000 F'), (75000, '75 000 F'), (80000, '80 000 F'), (85000, '85 000 F'), (90000, '90 000 F'), (95000, '95 000 F'), (100000, '100 000 F')], default=15000)),
                ('is_active', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='cars', to='cars.brand', verbose_name='cars_brand')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cars', to=settings.AUTH_USER_MODEL, verbose_name='Propriétaire')),
                ('features', models.ManyToManyField(blank=True, related_name='cars', to='cars.carfeature')),
                ('model_name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='cars_models', to='cars.carmodel', verbose_name='Modèle')),
            ],
            options={
                'verbose_name': 'Voiture',
                'verbose_name_plural': 'Voitures',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CarPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=cars.models.car_photo_upload_to)),
                ('caption', models.CharField(blank=True, max_length=140)),
                ('is_cover', models.BooleanField(default=False)),
                ('order', models.PositiveSmallIntegerField(default=0)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='cars.car')),
            ],
            options={
                'verbose_name': 'Photo de voiture',
                'verbose_name_plural': 'Photos de voiture',
                'ordering': ['order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region', models.CharField(choices=[('Dakar', 'Dakar'), ('Thiès', 'Thiès'), ('Diourbel', 'Diourbel'), ('Kaolack', 'Kaolack'), ('Fatick', 'Fatick'), ('Kaffrine', 'Kaffrine'), ('Louga', 'Louga'), ('Saint-Louis', 'Saint-Louis'), ('Matam', 'Matam'), ('Tambacounda', 'Tambacounda'), ('Kédougou', 'Kédougou'), ('Kolda', 'Kolda'), ('Sédhiou', 'Sédhiou'), ('Ziguinchor', 'Ziguinchor')], max_length=20)),
                ('country', models.CharField(db_index=True, default='SN', editable=False, max_length=2)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, validators=[django.core.validators.MinValueValidator(-90), django.core.validators.MaxValueValidator(90)])),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, validators=[django.core.validators.MinValueValidator(-180), django.core.validators.MaxValueValidator(180)])),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='places', to='cars.city', verbose_name='Ville')),
            ],
            options={
                'verbose_name': 'Lieu',
                'verbose_name_plural': 'Lieux',
            },
        ),
        migrations.AddField(
            model_name='car',
            name='place',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='cars', to='cars.place'),
        ),
        migrations.AddConstraint(
            model_name='carmodel',
            constraint=models.UniqueConstraint(fields=('brand', 'name'), name='uniq_brand_model'),
        ),
        migrations.AddConstraint(
            model_name='carphoto',
            constraint=models.UniqueConstraint(condition=models.Q(('is_cover', True)), fields=('car',), name='unique_cover_per_car'),
        ),
        migrations.AddIndex(
            model_name='place',
            index=models.Index(fields=['city', 'region'], name='cars_place_city_id_519ab6_idx'),
        ),
        migrations.AddIndex(
            model_name='place',
            index=models.Index(fields=['country'], name='cars_place_country_203b34_idx'),
        ),
        migrations.AddIndex(
            model_name='car',
            index=models.Index(fields=['is_active', 'place'], name='cars_car_is_acti_19b2a5_idx'),
        ),
        migrations.AddIndex(
            model_name='car',
            index=models.Index(fields=['brand', 'model_name', 'year'], name='cars_car_brand_i_a3deff_idx'),
        ),
        migrations.AddIndex(
            model_name='car',
            index=models.Index(fields=['daily_price'], name='cars_car_daily_p_37c7e1_idx'),
        ),
        migrations.AddIndex(
            model_name='car',
            index=models.Index(fields=['place', 'daily_price'], name='cars_car_place_i_60df2e_idx'),
        ),
    ]
